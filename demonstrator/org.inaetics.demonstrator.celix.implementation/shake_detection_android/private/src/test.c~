/**
 *Licensed to the Apache Software Foundation (ASF) under one
 *or more contributor license agreements.  See the NOTICE file
 *distributed with this work for additional information
 *regarding copyright ownership.  The ASF licenses this file
 *to you under the Apache License, Version 2.0 (the
 *"License"); you may not use this file except in compliance
 *with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing,
 *software distributed under the License is distributed on an
 *"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 *specific language governing permissions and limitations
 *under the License.
 */
/*
 * test.c
 *
 *  \date       12 Feb 2014
 *  \author     <a href="mailto:dev@celix.apache.org">Apache Celix Project Team</a>
 *  \copyright  Apache License, Version 2.0
 */

#include <stdio.h>
#include <android/sensor.h>
#include <android/looper.h>

ASensorEventQueue* sensorEventQueue;

void doo()
{
    printf("Hello from second lib\n");

    ASensorManager* sensorManager;
    const ASensor* accSensor;
    ALooper* looper = ALooper_forThread();
    if (looper == NULL) {
        looper = ALooper_prepare(ALOOPER_PREPARE_ALLOW_NON_CALLBACKS);
    }
    sensorManager = ASensorManager_getInstance();
    accSensor = ASensorManager_getDefaultSensor(sensorManager, ASENSOR_TYPE_ACCELEROMETER);
    sensorEventQueue = ASensorManager_createEventQueue(sensorManager, looper, 1,NULL, NULL );
    ASensorEventQueue_enableSensor(sensorEventQueue, accSensor);
    int a = ASensor_getMinDelay(accSensor);
    LOGI("min delay accsensor: %d",a);
    ASensorEventQueue_setEventRate(sensorEventQueue, accSensor, a*2);
    ASensorEvent event;
    int accCounter = 0;
    int prevx, prevy, prevz;
    float prevSpeed;
    while (1) {
        while (ASensorEventQueue_getEvents(sensorEventQueue, &event, 1) > 0) {
            if (event.type == ASENSOR_TYPE_ACCELEROMETER) {
                if (accCounter == 15) {
                    float x,y,z;
                    x = abs(event.acceleration.x);
                    y = abs(event.acceleration.y);
                    z = abs(event.acceleration.z);

                    float speed = abs(x + y + z - prevx - prevy - prevz);
		    printf("speed: %f\n",speed);
                    if ( speed >= 20) {
                 	printf("shake detected!\n");
                    }
                    prevx = x;
                    prevy = y;
                    prevz = z;
                    accCounter = 0;
                }
                accCounter++;
            }

        }
    }
}
